import { FromAudio } from './from-audio';
import { FromAudioToText } from './from-audio-to-text';
import { FromImage } from './from-image';
import { FromImageToImage } from './from-image-to-image';
import { FromImageToText } from './from-image-to-text';
import { FromText } from './from-text';
import { FromTextToImage } from './from-text-to-image';
import { FromTextToText } from './from-text-to-text';
import { AudioTextAudioTranscriptionInputs, ImageImageBackgroundRemovalInputs, ImageImageColorizationInputs, ImageImageDeblurringInputs, ImageImageFaceBluringInputs, ImageImageGuidedInpaintingInputs, ImageImageInpaintingInputs, ImageImageSuperResolutionInputs, ImageImageUncolorizationInputs, ImageTextAsciifyInputs, ImageTextClassificationInputs, ImageTextOcrInputs, TextImageImageGenerationInputs, TextTextAdGenerationInputs, TextTextArticleGenerationInputs, TextTextAutocorrectInputs, TextTextBulletPointGenerationInputs, TextTextEmotionRecognitionInputs, TextTextHateSpeechDetectionInputs, TextTextHeadlineGenerationInputs, TextTextIntentClassificationInputs, TextTextKeywordExtractionInputs, TextTextLanguageDetectionInputs, TextTextLanguageGenerationInputs, TextTextNamedEntityRecognitionInputs, TextTextNextSentencePredictionInputs, TextTextNextWordPredictionInputs, TextTextPluralInputs, TextTextProgrammingLanguageGenerationInputs, TextTextQuestionAnsweringInputs, TextTextSentenceParaphraserInputs, TextTextSentimentAnalysisInputs, TextTextSimilarityInputs, TextTextSummarizationInputs, TextTextTranslationInputs, TextTextWordAlignmentInputs } from './input-models';
export declare abstract class Shortcuts implements Omit<FromAudioToText, 'httpClient'>, Omit<FromImageToImage, 'httpClient'>, Omit<FromImageToText, 'httpClient'>, Omit<FromTextToImage, 'httpClient'>, Omit<FromTextToText, 'httpClient'> {
    abstract fromAudio(): FromAudio;
    audioTranscription(args: AudioTextAudioTranscriptionInputs): Promise<import("./output-models").AudioTextAudioTranscriptionOutputs>;
    abstract fromImage(): FromImage;
    backgroundRemoval(args: ImageImageBackgroundRemovalInputs): Promise<ArrayBuffer>;
    colorization(args: ImageImageColorizationInputs): Promise<ArrayBuffer>;
    deblurring(args: ImageImageDeblurringInputs): Promise<ArrayBuffer>;
    faceBluring(args: ImageImageFaceBluringInputs): Promise<ArrayBuffer>;
    guidedInpainting(args: ImageImageGuidedInpaintingInputs): Promise<ArrayBuffer>;
    inpainting(args: ImageImageInpaintingInputs): Promise<ArrayBuffer>;
    superResolution(args: ImageImageSuperResolutionInputs): Promise<ArrayBuffer>;
    uncolorization(args: ImageImageUncolorizationInputs): Promise<ArrayBuffer>;
    asciify(args: ImageTextAsciifyInputs): Promise<import("./output-models").ImageTextAsciifyOutputs>;
    classification(args: ImageTextClassificationInputs): Promise<import("./output-models").ImageTextClassificationOutputs>;
    ocr(args: ImageTextOcrInputs): Promise<import("./output-models").ImageTextOcrOutputs>;
    abstract fromText(): FromText;
    imageGeneration(args: TextImageImageGenerationInputs): Promise<ArrayBuffer>;
    adGeneration(args: TextTextAdGenerationInputs): Promise<import("./output-models").TextTextAdGenerationOutputs>;
    articleGeneration(args: TextTextArticleGenerationInputs): Promise<import("./output-models").TextTextArticleGenerationOutputs>;
    autocorrect(args: TextTextAutocorrectInputs): Promise<import("./output-models").TextTextAutocorrectOutputs>;
    bulletPointGeneration(args: TextTextBulletPointGenerationInputs): Promise<import("./output-models").TextTextBulletPointGenerationOutputs>;
    emotionRecognition(args: TextTextEmotionRecognitionInputs): Promise<import("./output-models").TextTextEmotionRecognitionOutputs>;
    hateSpeechDetection(args: TextTextHateSpeechDetectionInputs): Promise<import("./output-models").TextTextHateSpeechDetectionOutputs>;
    headlineGeneration(args: TextTextHeadlineGenerationInputs): Promise<import("./output-models").TextTextHeadlineGenerationOutputs>;
    intentClassification(args: TextTextIntentClassificationInputs): Promise<import("./output-models").TextTextIntentClassificationOutputs>;
    keywordExtraction(args: TextTextKeywordExtractionInputs): Promise<import("./output-models").TextTextKeywordExtractionOutputs>;
    languageDetection(args: TextTextLanguageDetectionInputs): Promise<import("./output-models").TextTextLanguageDetectionOutputs>;
    languageGeneration(args: TextTextLanguageGenerationInputs): Promise<import("./output-models").TextTextLanguageGenerationOutputs>;
    namedEntityRecognition(args: TextTextNamedEntityRecognitionInputs): Promise<import("./output-models").TextTextNamedEntityRecognitionOutputs>;
    nextSentencePrediction(args: TextTextNextSentencePredictionInputs): Promise<import("./output-models").TextTextNextSentencePredictionOutputs>;
    nextWordPrediction(args: TextTextNextWordPredictionInputs): Promise<import("./output-models").TextTextNextWordPredictionOutputs>;
    plural(args: TextTextPluralInputs): Promise<import("./output-models").TextTextPluralOutputs>;
    programmingLanguageGeneration(args: TextTextProgrammingLanguageGenerationInputs): Promise<import("./output-models").TextTextProgrammingLanguageGenerationOutputs>;
    questionAnswering(args: TextTextQuestionAnsweringInputs): Promise<import("./output-models").TextTextQuestionAnsweringOutputs>;
    sentenceParaphraser(args: TextTextSentenceParaphraserInputs): Promise<import("./output-models").TextTextSentenceParaphraserOutputs>;
    sentimentAnalysis(args: TextTextSentimentAnalysisInputs): Promise<import("./output-models").TextTextSentimentAnalysisOutputs>;
    similarity(args: TextTextSimilarityInputs): Promise<import("./output-models").TextTextSimilarityOutputs>;
    summarization(args: TextTextSummarizationInputs): Promise<import("./output-models").TextTextSummarizationOutputs>;
    translation(args: TextTextTranslationInputs): Promise<import("./output-models").TextTextTranslationOutputs>;
    wordAlignment(args: TextTextWordAlignmentInputs): Promise<import("./output-models").TextTextWordAlignmentOutputs>;
}
